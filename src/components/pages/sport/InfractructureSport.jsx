import React, { useState, useEffect, useRef } from "react";
import { useTranslation } from "react-i18next";
import { motion, AnimatePresence } from "framer-motion";

const InfrastructureSport = () => {
  const { t, i18n } = useTranslation();
  const [activeTab, setActiveTab] = useState("stadiums");
  const [hoveredCard, setHoveredCard] = useState(null);
  const [isVisible, setIsVisible] = useState(false);
  const [counterValues, setCounterValues] = useState([0, 0, 0, 0]);
  const [apiData, setApiData] = useState({
    infrastructure: null,
    loading: false, // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ false –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    error: null,
  });
  const sectionRef = useRef(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å API - –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const fetchInfrastructureData = async () => {
    try {
      setApiData((prev) => ({ ...prev, loading: true, error: null }));
      
      // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ä–∞–∑—É –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      setTimeout(() => {
        setApiData((prev) => ({ 
          ...prev, 
          infrastructure: null, // –ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
          loading: false 
        }));
      }, 500);
      
    } catch (error) {
      console.error("Error fetching infrastructure data:", error);
      setApiData((prev) => ({ ...prev, error: error.message, loading: false }));
    }
  };

  useEffect(() => {
    fetchInfrastructureData();
  }, [i18n.language]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API
  const asArray = (v) => {
    if (!v) return [];
    if (Array.isArray(v)) return v;
    if (typeof v === "string") return [v];
    if (typeof v === "object") return Object.values(v);
    return [];
  };

  const normalizeInfrastructureData = (apiInfrastructure) => {
    // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    return {
      name: t("infrastructureSport.name", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ö–ì–ê–§–ö–∏–°"),
      description: t(
        "infrastructureSport.description",
        "–ù–∞—à–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π."
      ),
      badge: t("infrastructureSport.badge", "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞"),
      stats: [
        { label: t("infrastructureSport.stats.objects", "—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤"), value: "25+", icon: "üèüÔ∏è" },
        { label: t("infrastructureSport.stats.area", "–º¬≤ –æ–±—â–∞—è –ø–ª–æ—â–∞–¥—å"), value: "8000+", icon: "üìê" },
        { label: t("infrastructureSport.stats.sports", "–≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞"), value: "15+", icon: "‚öΩ" },
        { label: t("infrastructureSport.stats.equipment", "–µ–¥–∏–Ω–∏—Ü –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"), value: "500+", icon: "üèãÔ∏è" },
      ],
      categories: [
        {
          id: "stadiums",
          name: t("infrastructureSport.categories.stadiums", "–°—Ç–∞–¥–∏–æ–Ω—ã"),
          icon: "‚öΩ",
          color: "from-green-500 to-emerald-500",
          objects: [
            {
              id: 1,
              name: t("infrastructureSport.objects.mainStadium", "–ì–ª–∞–≤–Ω—ã–π —Å—Ç–∞–¥–∏–æ–Ω"),
              description: t("infrastructureSport.objects.mainStadiumDesc", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∞–¥–∏–æ–Ω —Å –±–µ–≥–æ–≤—ã–º–∏ –¥–æ—Ä–æ–∂–∫–∞–º–∏ –∏ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–º –ø–æ–ª–µ–º –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞"),
              image: "https://images.unsplash.com/photo-1518604666860-9ed391f76460?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.capacity", "–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: 1500 –∑—Ä–∏—Ç–µ–ª–µ–π"),
                t("infrastructureSport.features.track", "–°–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ"),
                t("infrastructureSport.features.lighting", "–ü—Ä–æ–∂–µ–∫—Ç–æ—Ä–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ"),
                t("infrastructureSport.features.tribunes", "–¢—Ä–∏–±—É–Ω—ã —Å –Ω–∞–≤–µ—Å–æ–º")
              ]
            },
            {
              id: 2,
              name: t("infrastructureSport.objects.miniStadium", "–ú–∏–Ω–∏-—Å—Ç–∞–¥–∏–æ–Ω"),
              description: t("infrastructureSport.objects.miniStadiumDesc", "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π"),
              image: "https://images.unsplash.com/photo-1575361204480-aadea25e6e68?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.multisport", "–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞"),
                t("infrastructureSport.features.artificial", "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ"),
                t("infrastructureSport.features.allWeather", "–í—Å–µ–ø–æ–≥–æ–¥–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ")
              ]
            }
          ],
        },
        {
          id: "pools",
          name: t("infrastructureSport.categories.pools", "–ü–ª–∞–≤–∞—Ç–µ–ª—å–Ω—ã–µ –±–∞—Å—Å–µ–π–Ω—ã"),
          icon: "üèä",
          color: "from-cyan-500 to-blue-500",
          objects: [
            {
              id: 3,
              name: t("infrastructureSport.objects.olympicPool", "–û–ª–∏–º–ø–∏–π—Å–∫–∏–π –±–∞—Å—Å–µ–π–Ω"),
              description: t("infrastructureSport.objects.olympicPoolDesc", "50-–º–µ—Ç—Ä–æ–≤—ã–π –±–∞—Å—Å–µ–π–Ω —Å 8 –¥–æ—Ä–æ–∂–∫–∞–º–∏ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"),
              image: "https://images.unsplash.com/photo-1575429198097-0414ec08e8cd?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.length", "–î–ª–∏–Ω–∞: 50 –º–µ—Ç—Ä–æ–≤"),
                t("infrastructureSport.features.lanes", "8 –¥–æ—Ä–æ–∂–µ–∫"),
                t("infrastructureSport.features.depth", "–ì–ª—É–±–∏–Ω–∞: 2-3 –º–µ—Ç—Ä–∞"),
                t("infrastructureSport.features.water", "–°–∏—Å—Ç–µ–º–∞ –æ—á–∏—Å—Ç–∫–∏ –≤–æ–¥—ã")
              ]
            },
            {
              id: 4,
              name: t("infrastructureSport.objects.trainingPool", "–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –±–∞—Å—Å–µ–π–Ω"),
              description: t("infrastructureSport.objects.trainingPoolDesc", "25-–º–µ—Ç—Ä–æ–≤—ã–π –±–∞—Å—Å–µ–π–Ω –¥–ª—è —É—á–µ–±–Ω–æ-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π"),
              image: "https://images.unsplash.com/photo-1584467735871-8db9ac8d0288?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.length", "–î–ª–∏–Ω–∞: 25 –º–µ—Ç—Ä–æ–≤"),
                t("infrastructureSport.features.temperature", "–ü–æ–¥–æ–≥—Ä–µ–≤ –≤–æ–¥—ã"),
                t("infrastructureSport.features.safety", "–°–ø–∞—Å–∞—Ç–µ–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞")
              ]
            }
          ],
        },
        {
          id: "gyms",
          name: t("infrastructureSport.categories.gyms", "–¢—Ä–µ–Ω–∞–∂—ë—Ä–Ω—ã–µ –∑–∞–ª—ã"),
          icon: "üèãÔ∏è",
          color: "from-orange-500 to-red-500",
          objects: [
            {
              id: 5,
              name: t("infrastructureSport.objects.powerGym", "–°–∏–ª–æ–≤–æ–π –∑–∞–ª"),
              description: t("infrastructureSport.objects.powerGymDesc", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–ª —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å–∏–ª–æ–≤—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º"),
              image: "https://images.unsplash.com/photo-1534438327276-14e5300c3a48?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.equipment", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã"),
                t("infrastructureSport.features.freeWeights", "–°–≤–æ–±–æ–¥–Ω—ã–µ –≤–µ—Å–∞"),
                t("infrastructureSport.features.cardio", "–ö–∞—Ä–¥–∏–æ-–∑–æ–Ω–∞"),
                t("infrastructureSport.features.conditioning", "–°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
              ]
            },
            {
              id: 6,
              name: t("infrastructureSport.objects.fitnessGym", "–§–∏—Ç–Ω–µ—Å-–∑–∞–ª"),
              description: t("infrastructureSport.objects.fitnessGymDesc", "–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–ª –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∑–∞–Ω—è—Ç–∏–π"),
              image: "https://images.unsplash.com/photo-1549060279-7e168fce7090?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.group", "–ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è"),
                t("infrastructureSport.features.yoga", "–ó–æ–Ω–∞ –¥–ª—è –π–æ–≥–∏ –∏ –ø–∏–ª–∞—Ç–µ—Å–∞"),
                t("infrastructureSport.features.mirrors", "–ó–µ—Ä–∫–∞–ª—å–Ω—ã–µ —Å—Ç–µ–Ω—ã"),
                t("infrastructureSport.features.sound", "–ê—É–¥–∏–æ—Å–∏—Å—Ç–µ–º–∞")
              ]
            }
          ],
        },
        {
          id: "martial",
          name: t("infrastructureSport.categories.martial", "–ó–∞–ª—ã –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤"),
          icon: "ü•ã",
          color: "from-red-500 to-orange-500",
          objects: [
            {
              id: 7,
              name: t("infrastructureSport.objects.judoHall", "–ó–∞–ª –¥–∑—é–¥–æ –∏ —Å–∞–º–±–æ"),
              description: t("infrastructureSport.objects.judoHallDesc", "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ª —Å —Ç–∞—Ç–∞–º–∏ –¥–ª—è –±–æ—Ä—å–±—ã"),
              image: "https://images.unsplash.com/photo-1599058917765-a780eda07a3e?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.tatami", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–∞—Ç–∞–º–∏"),
                t("infrastructureSport.features.mats", "–ó–∞—â–∏—Ç–Ω—ã–µ –º–∞—Ç—ã"),
                t("infrastructureSport.features.changing", "–†–∞–∑–¥–µ–≤–∞–ª–∫–∏ –∏ –¥—É—à–µ–≤—ã–µ"),
                t("infrastructureSport.features.equipment", "–¢—Ä–µ–Ω–∞–∂–µ—Ä—ã –¥–ª—è –±–æ—Ä—å–±—ã")
              ]
            },
            {
              id: 8,
              name: t("infrastructureSport.objects.boxingHall", "–ë–æ–∫—Å–µ—Ä—Å–∫–∏–π –∑–∞–ª"),
              description: t("infrastructureSport.objects.boxingHallDesc", "–ó–∞–ª —Å —Ä–∏–Ω–≥–æ–º –∏ –±–æ–∫—Å–µ—Ä—Å–∫–∏–º–∏ –º–µ—à–∫–∞–º–∏"),
              image: "https://images.unsplash.com/photo-1549719386-74dfcbf7dbed?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.ring", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∏–Ω–≥"),
                t("infrastructureSport.features.bags", "–ë–æ–∫—Å–µ—Ä—Å–∫–∏–µ –º–µ—à–∫–∏"),
                t("infrastructureSport.features.gloves", "–ê—Ä—Å–µ–Ω–∞–ª –ø–µ—Ä—á–∞—Ç–æ–∫"),
                t("infrastructureSport.features.ventilation", "–°–∏—Å—Ç–µ–º–∞ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏")
              ]
            }
          ],
        },
        {
          id: "labs",
          name: t("infrastructureSport.categories.labs", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏"),
          icon: "üî¨",
          color: "from-indigo-500 to-purple-500",
          objects: [
            {
              id: 9,
              name: t("infrastructureSport.objects.biomechLab", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –±–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∏"),
              description: t("infrastructureSport.objects.biomechLabDesc", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–≤–∏–∂–µ–Ω–∏–π —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤"),
              image: "https://images.unsplash.com/photo-1582719471384-894fbb16e074?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.motion", "–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–≤–∏–∂–µ–Ω–∏—è"),
                t("infrastructureSport.features.force", "–°–∏–ª–æ–≤—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"),
                t("infrastructureSport.features.emg", "–≠–ú–ì –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"),
                t("infrastructureSport.features.software", "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ü–û")
              ]
            },
            {
              id: 10,
              name: t("infrastructureSport.objects.physioLab", "–§–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è"),
              description: t("infrastructureSport.objects.physioLabDesc", "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"),
              image: "https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=400&h=300&fit=crop",
              features: [
                t("infrastructureSport.features.ergospirometry", "–≠—Ä–≥–æ—Å–ø–∏—Ä–æ–º–µ—Ç—Ä–∏—è"),
                t("infrastructureSport.features.lactate", "–ê–Ω–∞–ª–∏–∑ –ª–∞–∫—Ç–∞—Ç–∞"),
                t("infrastructureSport.features.ecg", "–≠–ö–ì –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"),
                t("infrastructureSport.features.anthropometry", "–ê–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏—è")
              ]
            }
          ],
        }
      ],
    };
  };

  const getIconForStat = (meaning, index) => {
    const defaultIcons = ["üèüÔ∏è", "üìê", "‚öΩ", "üèãÔ∏è"];
    const icons = {
      –æ–±—ä–µ–∫—Ç–æ–≤: "üèüÔ∏è",
      –ø–ª–æ—â–∞–¥—å: "üìê",
      —Å–ø–æ—Ä—Ç–∞: "‚öΩ",
      –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: "üèãÔ∏è",
      default: defaultIcons[index] || "üìä",
    };
    return icons[meaning?.toLowerCase()] || icons.default;
  };

  // –ü–æ–ª—É—á–∞–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const infrastructureData = normalizeInfrastructureData(apiData.infrastructure);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          startCounters();
        }
      },
      { threshold: 0.1 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, [infrastructureData.stats]);

  const startCounters = () => {
    const targetValues = infrastructureData.stats.map(
      (stat) => parseInt(stat.value.replace(/\D/g, "")) || 0
    );
    const duration = 2000;
    const steps = 60;
    const stepValues = targetValues.map((target) => target / steps);

    let currentStep = 0;
    const counterInterval = setInterval(() => {
      currentStep++;
      setCounterValues((prev) =>
        prev.map((value, index) => {
          if (currentStep <= steps) {
            return Math.min(value + stepValues[index], targetValues[index]);
          }
          return value;
        })
      );

      if (currentStep >= steps) {
        clearInterval(counterInterval);
      }
    }, duration / steps);
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.6,
      },
    },
  };

  // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä
  if (apiData.error) {
    console.warn("Infrastructure API error, using fallback data:", apiData.error);
  }

  if (apiData.loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-emerald-900 flex items-center justify-center">
        <div className="text-white text-2xl">{t("common.loading", "–ó–∞–≥—Ä—É–∑–∫–∞...")}</div>
      </div>
    );
  }

  return (
    <section
      ref={sectionRef}
      className="relative min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-emerald-900 py-16 lg:py-24 overflow-hidden"
    >
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
      <div className="absolute inset-0">
        <div className="absolute top-20 left-10 w-64 h-64 bg-blue-500/10 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute top-1/3 right-20 w-48 h-48 bg-emerald-500/15 rounded-full blur-3xl animate-bounce delay-1000"></div>
        <div className="absolute bottom-32 left-1/4 w-56 h-56 bg-cyan-500/10 rounded-full blur-3xl animate-pulse delay-500"></div>

        {/* –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã */}
        <div className="absolute top-1/4 right-1/4 text-6xl opacity-5">üèüÔ∏è</div>
        <div className="absolute bottom-1/3 left-1/4 text-5xl opacity-5">‚öΩ</div>
        <div className="absolute top-1/2 left-1/2 text-4xl opacity-5">üèãÔ∏è</div>
        <div className="absolute bottom-1/4 right-1/3 text-5xl opacity-5">üèä</div>
      </div>

      <div className="container mx-auto px-4 sm:px-6 relative z-10">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={isVisible ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8 }}
          className="text-center mb-16 lg:mb-20"
        >
          <motion.div
            initial={{ scale: 0 }}
            animate={isVisible ? { scale: 1 } : {}}
            transition={{ duration: 0.5, delay: 0.2 }}
            className="inline-flex items-center px-6 py-3 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/20 mb-6"
          >
            <span className="w-2 h-2 bg-gradient-to-r from-blue-400 to-emerald-400 rounded-full mr-3 animate-pulse"></span>
            <span className="text-blue-100 font-medium text-lg">
              {infrastructureData.badge}
            </span>
          </motion.div>

          <motion.h1
            initial={{ opacity: 0, y: 30 }}
            animate={isVisible ? { opacity: 1, y: 0 } : {}}
            transition={{ duration: 0.6, delay: 0.3 }}
            className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 tracking-tight"
          >
            {infrastructureData.name}
          </motion.h1>

          <motion.div
            initial={{ scale: 0 }}
            animate={isVisible ? { scale: 1 } : {}}
            transition={{ duration: 0.5, delay: 0.4 }}
            className="w-24 h-1 bg-gradient-to-r from-blue-400 to-emerald-400 mx-auto mb-8 rounded-full"
          ></motion.div>

          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={isVisible ? { opacity: 1, y: 0 } : {}}
            transition={{ duration: 0.6, delay: 0.5 }}
            className="text-xl text-blue-100 max-w-3xl mx-auto leading-relaxed"
          >
            {infrastructureData.description}
          </motion.p>
        </motion.div>

        {/* –î–µ–º–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="bg-gradient-to-r from-blue-500/10 to-emerald-500/10 border border-blue-400/30 rounded-2xl p-6 mb-8 text-center"
        >
          <div className="flex items-center justify-center space-x-3 text-blue-200">
            <span className="text-2xl">üí°</span>
            <p className="text-lg">
              {t("infrastructureSport.demoMessage", "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∞–∫–∞–¥–µ–º–∏–∏")}
            </p>
          </div>
        </motion.div>

        {/* Dynamic Stats */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={isVisible ? "visible" : "hidden"}
          className="grid grid-cols-2 lg:grid-cols-4 gap-6 mb-16 lg:mb-20"
        >
          {infrastructureData.stats.map((stat, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              className="bg-white/5 rounded-3xl p-8 backdrop-blur-sm border border-white/10 hover:border-emerald-400/30 transition-all duration-500 transform hover:-translate-y-2 group text-center relative overflow-hidden"
              onMouseEnter={() => setHoveredCard(index)}
              onMouseLeave={() => setHoveredCard(null)}
            >
              {/* Background effect */}
              <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-emerald-500 opacity-0 group-hover:opacity-5 transition-opacity duration-500"></div>

              <div className="relative z-10">
                <motion.div
                  className={`text-5xl mb-6 transition-transform duration-500 ${
                    hoveredCard === index
                      ? "scale-125 rotate-12"
                      : "group-hover:scale-110"
                  }`}
                  whileHover={{ scale: 1.2, rotate: 12 }}
                >
                  {stat.icon}
                </motion.div>
                <div className="text-4xl lg:text-5xl font-bold mb-4 font-mono bg-gradient-to-r from-blue-400 to-emerald-400 bg-clip-text text-transparent">
                  {stat.value.includes("%")
                    ? `${Math.round(counterValues[index])}%`
                    : stat.value.includes("+")
                    ? `${Math.round(counterValues[index])}+`
                    : Math.round(counterValues[index])}
                </div>
                <div className="text-blue-100 font-medium text-lg">
                  {stat.label}
                </div>
              </div>
            </motion.div>
          ))}
        </motion.div>

        {/* Main Content */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={isVisible ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8, delay: 0.6 }}
          className="bg-white/5 rounded-3xl backdrop-blur-lg border border-white/20 shadow-2xl overflow-hidden"
        >
          {/* Tab Navigation */}
          <div className="border-b border-white/20 bg-white/5">
            <div className="flex overflow-x-auto scrollbar-hide p-4">
              {infrastructureData.categories.map((category) => (
                <motion.button
                  key={category.id}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  onClick={() => setActiveTab(category.id)}
                  className={`flex items-center space-x-3 flex-shrink-0 px-8 py-4 font-bold text-lg transition-all duration-500 transform rounded-2xl mx-2 ${
                    activeTab === category.id
                      ? `bg-gradient-to-r ${category.color} text-white shadow-2xl scale-105`
                      : "text-blue-100 hover:text-white hover:bg-white/10 hover:shadow-lg"
                  }`}
                >
                  <span
                    className={`text-2xl transition-transform duration-300 ${
                      activeTab === category.id ? "scale-110" : ""
                    }`}
                  >
                    {category.icon}
                  </span>
                  <span className="text-base lg:text-lg">{category.name}</span>
                </motion.button>
              ))}
            </div>
          </div>

          {/* Tab Content */}
          <div className="p-6 lg:p-8">
            <AnimatePresence mode="wait">
              {infrastructureData.categories.map((category) => (
                activeTab === category.id && (
                  <motion.div
                    key={category.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: -20 }}
                    transition={{ duration: 0.5 }}
                    className="space-y-8"
                  >
                    <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                      {category.objects.map((object, index) => (
                        <motion.div
                          key={object.id || index}
                          initial={{ opacity: 0, scale: 0.9 }}
                          animate={{ opacity: 1, scale: 1 }}
                          transition={{ delay: index * 0.1 }}
                          className="bg-white/5 rounded-2xl overflow-hidden border border-white/10 hover:border-emerald-400/30 transition-all duration-500 transform hover:-translate-y-2 group backdrop-blur-sm cursor-pointer"
                          onMouseEnter={() => setHoveredCard(`object-${object.id}`)}
                          onMouseLeave={() => setHoveredCard(null)}
                        >
                          {/* Object Image */}
                          <div className="relative h-48 overflow-hidden">
                            {object.image ? (
                              <img
                                src={object.image}
                                alt={object.name}
                                className="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                              />
                            ) : (
                              <div className="w-full h-full bg-gradient-to-r from-blue-500/20 to-emerald-500/20 flex items-center justify-center">
                                <span className="text-6xl text-white/50">{category.icon}</span>
                              </div>
                            )}
                            {/* Overlay */}
                            <div className="absolute inset-0 bg-gradient-to-t from-slate-900/80 to-transparent"></div>
                            <div className="absolute bottom-4 left-4 right-4">
                              <h3 className="text-xl font-bold text-white mb-2 group-hover:text-emerald-300 transition-colors duration-300">
                                {object.name}
                              </h3>
                            </div>
                          </div>

                          {/* Object Content */}
                          <div className="p-6">
                            <p className="text-blue-100 text-lg mb-4 leading-relaxed">
                              {object.description}
                            </p>
                            
                            {/* Features */}
                            {object.features && object.features.length > 0 && (
                              <div className="flex flex-wrap gap-2">
                                {object.features.map((feature, featureIndex) => (
                                  <motion.span
                                    key={featureIndex}
                                    className="px-3 py-2 bg-gradient-to-r from-blue-500/20 to-emerald-500/20 text-blue-300 rounded-2xl text-sm font-medium hover:bg-blue-500/30 hover:scale-105 transition-all duration-300 cursor-default border border-blue-400/30"
                                    whileHover={{ scale: 1.05 }}
                                  >
                                    {feature}
                                  </motion.span>
                                ))}
                              </div>
                            )}
                          </div>
                        </motion.div>
                      ))}
                    </div>
                  </motion.div>
                )
              ))}
            </AnimatePresence>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default InfrastructureSport;