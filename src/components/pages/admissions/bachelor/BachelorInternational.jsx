// components/BachelorInternational.jsx
import { useState } from 'react';
import { useTranslation } from 'react-i18next';

const BachelorInternational = () => {
  const { t } = useTranslation();
  const [selectedCountry, setSelectedCountry] = useState('germany');
  const [activeTab, setActiveTab] = useState('requirements');

  const countries = {
    germany: {
      name: 'üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è',
      flag: 'üá©üá™',
      requirements: [
        t('bachelor.international.countries.germany.requirements.0', '–ê—Ç—Ç–µ—Å—Ç–∞—Ç –æ —Å—Ä–µ–¥–Ω–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ —Å –≤—ã—Å–æ–∫–∏–º —Å—Ä–µ–¥–Ω–∏–º –±–∞–ª–ª–æ–º'),
        t('bachelor.international.countries.germany.requirements.1', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞ —É—Ä–æ–≤–Ω—è TestDaF –∏–ª–∏ DSH'),
        t('bachelor.international.countries.germany.requirements.2', '–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
      ],
      support: [
        t('bachelor.international.countries.germany.support.0', '–ü–æ–º–æ—â—å –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è'),
        t('bachelor.international.countries.germany.support.1', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –≤–∏–∑—ã'),
        t('bachelor.international.countries.germany.support.2', '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –ø–æ–∏—Å–∫–µ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏')
      ],
      universities: [
        t('bachelor.international.countries.germany.universities.0', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ú—é–Ω—Ö–µ–Ω–∞'),
        t('bachelor.international.countries.germany.universities.1', '–ì–µ–π–¥–µ–ª—å–±–µ—Ä–≥—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'),
        t('bachelor.international.countries.germany.universities.2', '–°–≤–æ–±–æ–¥–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ë–µ—Ä–ª–∏–Ω–∞')
      ],
      color: 'blue'
    },
    usa: {
      name: 'üá∫üá∏ –°–®–ê',
      flag: 'üá∫üá∏',
      requirements: [
        t('bachelor.international.countries.usa.requirements.0', '–î–∏–ø–ª–æ–º —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã —Å –≤—ã—Å–æ–∫–∏–º GPA'),
        t('bachelor.international.countries.usa.requirements.1', '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã SAT/ACT –∏ TOEFL/IELTS'),
        t('bachelor.international.countries.usa.requirements.2', '–≠—Å—Å–µ –∏ –≤–Ω–µ—É—á–µ–±–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è')
      ],
      support: [
        t('bachelor.international.countries.usa.support.0', '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–µ—Å—Ç–∞–º'),
        t('bachelor.international.countries.usa.support.1', '–ü–æ–º–æ—â—å –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º'),
        t('bachelor.international.countries.usa.support.2', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Å—Ç–∏–ø–µ–Ω–¥–∏—è–º –∏ –≥—Ä–∞–Ω—Ç–∞–º')
      ],
      universities: [
        t('bachelor.international.countries.usa.universities.0', '–ì–∞—Ä–≤–∞—Ä–¥—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'),
        t('bachelor.international.countries.usa.universities.1', '–°—Ç—ç–Ω—Ñ–æ—Ä–¥—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'),
        t('bachelor.international.countries.usa.universities.2', '–ú–∞—Å—Å–∞—á—É—Å–µ—Ç—Å–∫–∏–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç')
      ],
      color: 'green'
    },
    korea: {
      name: 'üá∞üá∑ –Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è',
      flag: 'üá∞üá∑',
      requirements: [
        t('bachelor.international.countries.korea.requirements.0', '–ê—Ç—Ç–µ—Å—Ç–∞—Ç –æ –ø–æ–ª–Ω–æ–º —Å—Ä–µ–¥–Ω–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏'),
        t('bachelor.international.countries.korea.requirements.1', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç TOPIK (–∫–æ—Ä–µ–π—Å–∫–∏–π —è–∑—ã–∫)'),
        t('bachelor.international.countries.korea.requirements.2', '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π')
      ],
      support: [
        t('bachelor.international.countries.korea.support.0', '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω—É TOPIK'),
        t('bachelor.international.countries.korea.support.1', '–ü–æ–º–æ—â—å –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –≤–∏–∑—ã D-2'),
        t('bachelor.international.countries.korea.support.2', '–ö—É–ª—å—Ç—É—Ä–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è')
      ],
      universities: [
        t('bachelor.international.countries.korea.universities.0', '–°–µ—É–ª—å—Å–∫–∏–π –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'),
        t('bachelor.international.countries.korea.universities.1', '–ö–æ—Ä–µ–π—Å–∫–∏–π –≤–µ–¥—É—â–∏–π –Ω–∞—É—á–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç'),
        t('bachelor.international.countries.korea.universities.2', '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Å–Ω—Å–µ')
      ],
      color: 'red'
    },
    japan: {
      name: 'üáØüáµ –Ø–ø–æ–Ω–∏—è',
      flag: 'üáØüáµ',
      requirements: [
        t('bachelor.international.countries.japan.requirements.0', '–ê—Ç—Ç–µ—Å—Ç–∞—Ç –æ 12-–ª–µ—Ç–Ω–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏'),
        t('bachelor.international.countries.japan.requirements.1', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç JLPT N2 –∏–ª–∏ –≤—ã—à–µ'),
        t('bachelor.international.countries.japan.requirements.2', '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫–∑–∞–º–µ–Ω–∞ EJU')
      ],
      support: [
        t('bachelor.international.countries.japan.support.0', '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω—É EJU'),
        t('bachelor.international.countries.japan.support.1', '–ü–æ–º–æ—â—å –≤ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ —è–∑—ã–∫–æ–≤—É—é —à–∫–æ–ª—É'),
        t('bachelor.international.countries.japan.support.2', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Å—Ç–∏–ø–µ–Ω–¥–∏—è–º MEXT')
      ],
      universities: [
        t('bachelor.international.countries.japan.universities.0', '–¢–æ–∫–∏–π—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'),
        t('bachelor.international.countries.japan.universities.1', '–ö–∏–æ—Ç—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'),
        t('bachelor.international.countries.japan.universities.2', '–û—Å–∞–∫—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç')
      ],
      color: 'purple'
    }
  };

  const processSteps = [
    { 
      step: 1, 
      title: t('bachelor.international.process.apply', '–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è'), 
      duration: '1-2 –º–µ—Å—è—Ü–∞',
      description: t('bachelor.international.process.applyDesc', '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –ø–æ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã')
    },
    { 
      step: 2, 
      title: t('bachelor.international.process.documents', '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'), 
      duration: '2-3 –Ω–µ–¥–µ–ª–∏',
      description: t('bachelor.international.process.documentsDesc', '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤–∏–∑–µ')
    },
    { 
      step: 3, 
      title: t('bachelor.international.process.visa', '–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∏–∑—ã'), 
      duration: '1-3 –º–µ—Å—è—Ü–∞',
      description: t('bachelor.international.process.visaDesc', '–ü–æ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫—É—é –≤–∏–∑—É')
    },
    { 
      step: 4, 
      title: t('bachelor.international.process.arrival', '–ü—Ä–∏–±—ã—Ç–∏–µ –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è'), 
      duration: '2 –Ω–µ–¥–µ–ª–∏',
      description: t('bachelor.international.process.arrivalDesc', '–ü–µ—Ä–µ–µ–∑–¥ –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–µ')
    }
  ];

  const getColorClasses = (color) => {
    switch (color) {
      case 'green':
        return { 
          bg: 'bg-green-50', 
          border: 'border-green-200', 
          text: 'text-green-800',
          active: 'bg-green-600',
          light: 'bg-green-100'
        };
      case 'blue':
        return { 
          bg: 'bg-blue-50', 
          border: 'border-blue-200', 
          text: 'text-blue-800',
          active: 'bg-blue-600',
          light: 'bg-blue-100'
        };
      case 'red':
        return { 
          bg: 'bg-red-50', 
          border: 'border-red-200', 
          text: 'text-red-800',
          active: 'bg-red-600',
          light: 'bg-red-100'
        };
      case 'purple':
        return { 
          bg: 'bg-purple-50', 
          border: 'border-purple-200', 
          text: 'text-purple-800',
          active: 'bg-purple-600',
          light: 'bg-purple-100'
        };
      default:
        return { 
          bg: 'bg-gray-50', 
          border: 'border-gray-200', 
          text: 'text-gray-800',
          active: 'bg-gray-600',
          light: 'bg-gray-100'
        };
    }
  };

  const currentCountry = countries[selectedCountry];
  const colors = getColorClasses(currentCountry.color);

  return (
    <div className="min-h-screen bg-white py-12 px-4">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="text-center mb-16">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
            {t('bachelor.international.title', '–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç –∑–∞ —Ä—É–±–µ–∂–æ–º')}
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
            {t('bachelor.international.subtitle', '–ü–æ–ª—É—á–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –≤–µ–¥—É—â–∏—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞—Ö –º–∏—Ä–∞ —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π')}
          </p>
        </div>

        {/* Statistics */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-12">
          <div className="bg-blue-50 rounded-2xl p-4 text-center border border-blue-100">
            <div className="text-2xl font-bold text-blue-600 mb-1">15+</div>
            <div className="text-blue-800 text-sm font-medium">–°—Ç—Ä–∞–Ω</div>
          </div>
          <div className="bg-green-50 rounded-2xl p-4 text-center border border-green-100">
            <div className="text-2xl font-bold text-green-600 mb-1">200+</div>
            <div className="text-green-800 text-sm font-medium">–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤</div>
          </div>
          <div className="bg-blue-50 rounded-2xl p-4 text-center border border-blue-100">
            <div className="text-2xl font-bold text-blue-600 mb-1">95%</div>
            <div className="text-blue-800 text-sm font-medium">–£—Å–ø–µ—à–Ω—ã—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π</div>
          </div>
          <div className="bg-gray-50 rounded-2xl p-4 text-center border border-gray-100">
            <div className="text-2xl font-bold text-gray-600 mb-1">5</div>
            <div className="text-gray-800 text-sm font-medium">–õ–µ—Ç –æ–ø—ã—Ç–∞</div>
          </div>
        </div>

        <div className="grid lg:grid-cols-3 gap-8 mb-16">
          {/* Country Selection */}
          <div className="lg:col-span-1">
            <div className="bg-white rounded-2xl border border-gray-200 p-6 sticky top-6">
              <h3 className="text-2xl font-bold text-gray-900 mb-6">
                {t('bachelor.international.chooseCountry', '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É')}
              </h3>
              <div className="space-y-3">
                {Object.entries(countries).map(([key, country]) => {
                  const countryColors = getColorClasses(country.color);
                  const isSelected = selectedCountry === key;
                  
                  return (
                    <button
                      key={key}
                      onClick={() => setSelectedCountry(key)}
                      className={`w-full p-4 rounded-xl border transition-all duration-300 text-left group ${
                        isSelected
                          ? `${countryColors.border} ${countryColors.bg} shadow-md transform scale-105`
                          : 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm'
                      }`}
                    >
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-3">
                          <span className="text-2xl">{country.flag}</span>
                          <span className="font-semibold text-gray-900">{country.name}</span>
                        </div>
                        <div className={`w-5 h-5 rounded-full border-2 transition-colors ${
                          isSelected 
                            ? `${countryColors.active} border-white shadow-inner` 
                            : 'border-gray-300 group-hover:border-gray-400'
                        }`}></div>
                      </div>
                    </button>
                  );
                })}
              </div>
            </div>
          </div>

          {/* Country Details */}
          <div className="lg:col-span-2">
            <div className="bg-white rounded-2xl border border-gray-200 overflow-hidden">
              {/* Country Header */}
              <div className={`${colors.bg} ${colors.border} border-b p-6`}>
                <div className="flex items-center gap-4">
                  <span className="text-4xl">{currentCountry.flag}</span>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-900">{currentCountry.name}</h2>
                    <p className="text-gray-600 mt-1">
                      {t('bachelor.international.opportunities', '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤')}
                    </p>
                  </div>
                </div>
              </div>

              {/* Tabs */}
              <div className="border-b border-gray-200">
                <div className="flex overflow-x-auto">
                  <button
                    onClick={() => setActiveTab('requirements')}
                    className={`flex-1 px-6 py-4 text-sm font-medium border-b-2 transition-colors ${
                      activeTab === 'requirements'
                        ? 'border-blue-600 text-blue-600'
                        : 'border-transparent text-gray-500 hover:text-gray-700'
                    }`}
                  >
                    üìã {t('bachelor.international.requirements', '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è')}
                  </button>
                  <button
                    onClick={() => setActiveTab('support')}
                    className={`flex-1 px-6 py-4 text-sm font-medium border-b-2 transition-colors ${
                      activeTab === 'support'
                        ? 'border-blue-600 text-blue-600'
                        : 'border-transparent text-gray-500 hover:text-gray-700'
                    }`}
                  >
                    üõ†Ô∏è {t('bachelor.international.support', '–ü–æ–¥–¥–µ—Ä–∂–∫–∞')}
                  </button>
                  <button
                    onClick={() => setActiveTab('universities')}
                    className={`flex-1 px-6 py-4 text-sm font-medium border-b-2 transition-colors ${
                      activeTab === 'universities'
                        ? 'border-blue-600 text-blue-600'
                        : 'border-transparent text-gray-500 hover:text-gray-700'
                    }`}
                  >
                    üéì {t('bachelor.international.universities', '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã')}
                  </button>
                </div>
              </div>

              {/* Tab Content */}
              <div className="p-6">
                {activeTab === 'requirements' && (
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold text-gray-900 mb-4">
                      {t('bachelor.international.requirementsForAdmission', '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è')}
                    </h3>
                    <ul className="space-y-3">
                      {currentCountry.requirements.map((req, idx) => (
                        <li key={idx} className="flex items-start gap-3 p-3 bg-gray-50 rounded-lg">
                          <div className={`w-6 h-6 ${colors.light} rounded-full flex items-center justify-center flex-shrink-0 mt-0.5`}>
                            <div className={`w-2 h-2 ${colors.active} rounded-full`}></div>
                          </div>
                          <span className="text-gray-700">{req}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}

                {activeTab === 'support' && (
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold text-gray-900 mb-4">
                      {t('bachelor.international.ourSupport', '–ù–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞')}
                    </h3>
                    <ul className="space-y-3">
                      {currentCountry.support.map((sup, idx) => (
                        <li key={idx} className="flex items-start gap-3 p-3 bg-blue-50 rounded-lg border border-blue-100">
                          <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                            <span className="text-blue-600 text-sm">‚úì</span>
                          </div>
                          <span className="text-blue-800">{sup}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}

                {activeTab === 'universities' && (
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold text-gray-900 mb-4">
                      {t('bachelor.international.topUniversities', '–¢–æ–ø —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã')}
                    </h3>
                    <div className="grid gap-3">
                      {currentCountry.universities.map((uni, idx) => (
                        <div key={idx} className="flex items-center gap-3 p-4 bg-white border border-gray-200 rounded-lg hover:border-blue-300 transition-colors">
                          <div className="w-10 h-10 bg-gradient-to-br from-blue-100 to-green-100 rounded-lg flex items-center justify-center flex-shrink-0">
                            <span className="text-lg">üéì</span>
                          </div>
                          <span className="text-gray-700">{uni}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>

        {/* Process Timeline */}
        <div className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              {t('bachelor.international.processTitle', '–ü—Ä–æ—Ü–µ—Å—Å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è')}
            </h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              {t('bachelor.international.processSubtitle', '–ü–æ—à–∞–≥–æ–≤—ã–π –ø—É—Ç—å –∫ –æ–±—É—á–µ–Ω–∏—é –∑–∞ —Ä—É–±–µ–∂–æ–º')}
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {processSteps.map((step, index) => (
              <div key={step.step} className="group">
                <div className="bg-white rounded-2xl border border-gray-200 p-6 h-full hover:border-blue-300 transition-all duration-300 hover:shadow-lg">
                  <div className="flex flex-col items-center text-center">
                    <div className="relative mb-6">
                      <div className="w-16 h-16 bg-blue-600 rounded-2xl flex items-center justify-center text-white font-bold text-xl group-hover:scale-110 transition-transform duration-300">
                        {step.step}
                      </div>
                      {index < processSteps.length - 1 && (
                        <div className="hidden lg:block absolute top-1/2 left-full w-full h-0.5 bg-gray-200 -z-10">
                          <div className="w-0 h-full bg-blue-600 group-hover:w-full transition-all duration-1000 delay-300"></div>
                        </div>
                      )}
                    </div>
                    
                    <h3 className="font-bold text-gray-900 mb-2 text-lg">{step.title}</h3>
                    <p className="text-blue-600 font-medium mb-3 flex items-center gap-1">
                      <span>‚è±Ô∏è</span>
                      <span>{step.duration}</span>
                    </p>
                    <p className="text-gray-600 text-sm leading-relaxed">
                      {step.description}
                    </p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* CTA Section */}
        <div className="bg-blue-50 rounded-2xl p-8 text-center border border-blue-200">
          <div className="max-w-2xl mx-auto">
            <h3 className="text-2xl font-bold text-gray-900 mb-4">
              {t('bachelor.international.cta.title', '–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –ø—É—Ç—å?')}
            </h3>
            <p className="text-gray-600 mb-6 text-lg">
              {t('bachelor.international.cta.description', '–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ —É–∑–Ω–∞–π—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∑–∞ —Ä—É–±–µ–∂–æ–º')}
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <button className="bg-blue-600 text-white px-8 py-3 rounded-xl font-semibold hover:bg-blue-700 transition-colors shadow-sm">
                {t('bachelor.international.cta.button', '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é')}
              </button>
              <button className="bg-white text-blue-600 px-8 py-3 rounded-xl font-semibold border border-blue-200 hover:border-blue-300 transition-colors">
                {t('bachelor.international.cta.secondary', '–°–∫–∞—á–∞—Ç—å –±—Ä–æ—à—é—Ä—É')}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BachelorInternational;