// components/BachelorContacts.jsx
import { useState, useEffect, useRef } from 'react';
import { useTranslation } from 'react-i18next';

const BachelorContacts = () => {
  const { t } = useTranslation();
  const [activeDepartment, setActiveDepartment] = useState('admission');
  const [openFaq, setOpenFaq] = useState(null);
  const [formData, setFormData] = useState({
    email: '',
    message: ''
  });
  const [isVisible, setIsVisible] = useState(false);
  const sectionRef = useRef(null);
  const hasAnimated = useRef(false);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting && !hasAnimated.current) {
          setIsVisible(true);
          hasAnimated.current = true;
        }
      },
      { threshold: 0.2 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  const departments = [
    {
      id: 'admission',
      name: t('bachelor.contacts.departments.admission.name', '–ü—Ä–∏–µ–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è'),
      email: 'admission@academy.ru',
      phone: '+7 (999) 123-45-67',
      hours: t('bachelor.contacts.departments.admission.hours', '–ü–Ω-–ü—Ç: 9:00-18:00'),
      description: t('bachelor.contacts.departments.admission.description', '–í–æ–ø—Ä–æ—Å—ã –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è'),
      icon: 'üìù',
      color: 'from-blue-500 to-blue-600'
    },
    {
      id: 'international',
      name: t('bachelor.contacts.departments.international.name', '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –æ—Ç–¥–µ–ª'),
      email: 'international@academy.ru',
      phone: '+7 (999) 123-45-68',
      hours: t('bachelor.contacts.departments.international.hours', '–ü–Ω-–ü—Ç: 10:00-17:00'),
      description: t('bachelor.contacts.departments.international.description', '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–º –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞–º, –≤–∏–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'),
      icon: 'üåç',
      color: 'from-green-500 to-green-600'
    },
    {
      id: 'quotas',
      name: t('bachelor.contacts.departments.quotas.name', '–û—Ç–¥–µ–ª –∫–≤–æ—Ç –∏ –≥—Ä–∞–Ω—Ç–æ–≤'),
      email: 'quotas@academy.ru',
      phone: '+7 (999) 123-45-69',
      hours: t('bachelor.contacts.departments.quotas.hours', '–ü–Ω-–ß—Ç: 9:00-17:00, –ü—Ç: 9:00-16:00'),
      description: t('bachelor.contacts.departments.quotas.description', '–ë—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, —Å—Ç–∏–ø–µ–Ω–¥–∏–∏, –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –≥—Ä–∞–Ω—Ç—ã'),
      icon: 'üéì',
      color: 'from-blue-500 to-green-500'
    },
    {
      id: 'general',
      name: t('bachelor.contacts.departments.general.name', '–û–±—â–∏–π –æ—Ç–¥–µ–ª'),
      email: 'info@academy.ru',
      phone: '+7 (999) 123-45-70',
      hours: t('bachelor.contacts.departments.general.hours', '–ü–Ω-–ü—Ç: 8:00-19:00'),
      description: t('bachelor.contacts.departments.general.description', '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã'),
      icon: 'üèõÔ∏è',
      color: 'from-green-500 to-blue-500'
    }
  ];

  const faqs = [
    {
      question: t('bachelor.contacts.faqs.0.question', '–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è?'),
      answer: t('bachelor.contacts.faqs.0.answer', '–î–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã: –ø–∞—Å–ø–æ—Ä—Ç, –¥–æ–∫—É–º–µ–Ω—Ç –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3x4, –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞. –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É—Ç–æ—á–Ω—è–π—Ç–µ –≤ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏.')
    },
    {
      question: t('bachelor.contacts.faqs.1.question', '–ï—Å—Ç—å –ª–∏ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞?'),
      answer: t('bachelor.contacts.faqs.1.answer', '–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π.')
    },
    {
      question: t('bachelor.contacts.faqs.2.question', '–ö–∞–∫–æ–π —Å—Ä–æ–∫ –ø–æ–¥–∞—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤?'),
      answer: t('bachelor.contacts.faqs.2.answer', '–ü—Ä–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è 20 –∏—é–Ω—è –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ 10 –∞–≤–≥—É—Å—Ç–∞ –¥–ª—è –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–¥–∞–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ.')
    }
  ];

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Here would be form submission logic
    console.log('Form submitted:', formData);
    // Reset form
    setFormData({ email: '', message: '' });
  };

  return (
    <section 
      ref={sectionRef}
      className="relative min-h-screen bg-gradient-to-br from-blue-900 via-blue-800 to-green-900 py-12 md:py-20 overflow-hidden"
    >
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
      <div className="absolute inset-0">
        <div className="absolute inset-0 bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-blue-600/10 via-transparent to-transparent"></div>
        <div className="absolute top-20 left-10 w-32 h-32 bg-green-400 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse"></div>
        <div className="absolute bottom-20 right-10 w-40 h-40 bg-blue-400 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-bounce"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-white/5 rounded-full blur-3xl"></div>
      </div>

      <div className="relative z-10 container mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className={`text-center mb-12 md:mb-16 transition-all duration-1000 ${
          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'
        }`}>
          <div className="inline-flex items-center px-6 py-3 rounded-full bg-white/10 backdrop-blur-lg border border-white/20 mb-6 group hover:bg-white/20 transition-all duration-300">
            <span className="w-3 h-3 bg-green-400 rounded-full mr-3 animate-pulse"></span>
            <span className="text-green-300 font-medium text-sm md:text-base">
              {t('bachelor.contacts.badge', '–ö–æ–Ω—Ç–∞–∫—Ç—ã')}
            </span>
          </div>
          <h1 className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold text-white mb-6">
            {t('bachelor.contacts.title', '–ö–û–ù–¢–ê–ö–¢–´ –î–õ–Ø –ü–û–°–¢–£–ü–õ–ï–ù–ò–Ø')}
          </h1>
          <div className="w-24 h-1 bg-gradient-to-r from-blue-400 to-green-400 mx-auto mb-6 md:mb-8"></div>
          <p className="text-lg sm:text-xl md:text-2xl text-blue-100 max-w-4xl mx-auto px-4 leading-relaxed">
            {t('bachelor.contacts.subtitle', '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è')}
          </p>
        </div>

        <div className={`grid lg:grid-cols-2 gap-6 md:gap-8 mb-12 transition-all duration-1000 delay-300 ${
          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'
        }`}>
          {/* Contact Information */}
          <div className="space-y-6">
            <div className="bg-white/10 backdrop-blur-lg rounded-2xl md:rounded-3xl border border-white/20 shadow-2xl p-6">
              <h2 className="text-2xl md:text-3xl font-bold text-white mb-6 flex items-center">
                <span className="w-3 h-3 bg-blue-400 rounded-full mr-3"></span>
                {t('bachelor.contacts.departmentsTitle', '–û—Ç–¥–µ–ª—ã –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã')}
              </h2>
              
              {/* Department Navigation */}
              <div className="bg-white/10 backdrop-blur-lg rounded-xl p-1 mb-6 border border-white/20">
                <div className="grid grid-cols-2 gap-1">
                  {departments.map((dept) => (
                    <button
                      key={dept.id}
                      onClick={() => setActiveDepartment(dept.id)}
                      className={`flex items-center justify-center px-3 py-3 text-sm font-medium rounded-lg transition-all duration-300 group ${
                        activeDepartment === dept.id
                          ? `bg-gradient-to-r ${dept.color} text-white shadow-lg scale-105`
                          : 'text-blue-100 hover:text-white hover:bg-white/10'
                      }`}
                    >
                      <span className="text-lg mr-2">{dept.icon}</span>
                      <span className="hidden sm:block">{dept.name.split(' ')[0]}</span>
                    </button>
                  ))}
                </div>
              </div>

              {/* Active Department Details */}
              {departments.map((dept) => (
                <div
                  key={dept.id}
                  className={`transition-all duration-500 ${
                    activeDepartment === dept.id ? 'block animate-fadeIn' : 'hidden'
                  }`}
                >
                  <div className="flex items-start space-x-4 mb-6">
                    <div className={`flex-shrink-0 w-16 h-16 rounded-2xl bg-gradient-to-r ${dept.color} flex items-center justify-center text-white text-2xl shadow-lg`}>
                      {dept.icon}
                    </div>
                    <div>
                      <h3 className="text-xl md:text-2xl font-bold text-white mb-2">{dept.name}</h3>
                      <p className="text-blue-100 mb-4">{dept.description}</p>
                    </div>
                  </div>

                  <div className="space-y-4">
                    <div className="flex items-center justify-between p-4 bg-white/5 rounded-xl border border-white/10 hover:border-green-400/30 transition-all duration-300 group">
                      <span className="text-blue-100 font-medium flex items-center">
                        <span className="w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center mr-3 text-blue-300">
                          üìß
                        </span>
                        {t('bachelor.contacts.email', 'Email')}
                      </span>
                      <a 
                        href={`mailto:${dept.email}`}
                        className="text-green-300 hover:text-green-400 font-medium transition-colors group-hover:scale-105"
                      >
                        {dept.email}
                      </a>
                    </div>
                    
                    <div className="flex items-center justify-between p-4 bg-white/5 rounded-xl border border-white/10 hover:border-green-400/30 transition-all duration-300 group">
                      <span className="text-blue-100 font-medium flex items-center">
                        <span className="w-8 h-8 bg-green-500/20 rounded-lg flex items-center justify-center mr-3 text-green-300">
                          üìû
                        </span>
                        {t('bachelor.contacts.phone', '–¢–µ–ª–µ—Ñ–æ–Ω')}
                      </span>
                      <a 
                        href={`tel:${dept.phone}`}
                        className="text-green-300 hover:text-green-400 font-medium transition-colors group-hover:scale-105"
                      >
                        {dept.phone}
                      </a>
                    </div>
                    
                    <div className="flex items-center justify-between p-4 bg-white/5 rounded-xl border border-white/10 hover:border-green-400/30 transition-all duration-300 group">
                      <span className="text-blue-100 font-medium flex items-center">
                        <span className="w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center mr-3 text-blue-300">
                          ‚è∞
                        </span>
                        {t('bachelor.contacts.hours', '–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã')}
                      </span>
                      <span className="text-green-300">{dept.hours}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {/* Quick Actions */}
            <div className="grid grid-cols-2 gap-4">
              <a
                href="tel:+79991234567"
                className="group bg-white/10 backdrop-blur-lg rounded-2xl border border-white/20 p-6 text-center hover:border-green-400/30 transition-all duration-500 hover:scale-105 hover:shadow-2xl"
              >
                <div className="w-16 h-16 bg-gradient-to-r from-green-500 to-green-600 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
                  <span className="text-white text-2xl">üìû</span>
                </div>
                <span className="font-bold text-white text-lg">
                  {t('bachelor.actions.call', '–ü–æ–∑–≤–æ–Ω–∏—Ç—å')}
                </span>
              </a>
              
              <a
                href="mailto:info@academy.ru"
                className="group bg-white/10 backdrop-blur-lg rounded-2xl border border-white/20 p-6 text-center hover:border-green-400/30 transition-all duration-500 hover:scale-105 hover:shadow-2xl"
              >
                <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
                  <span className="text-white text-2xl">‚úâÔ∏è</span>
                </div>
                <span className="font-bold text-white text-lg">
                  {t('bachelor.actions.email', '–ù–∞–ø–∏—Å–∞—Ç—å')}
                </span>
              </a>
            </div>
          </div>

          {/* FAQ & Contact Form */}
          <div className="space-y-6">
            {/* FAQ Section */}
            <div className="bg-white/10 backdrop-blur-lg rounded-2xl md:rounded-3xl border border-white/20 shadow-2xl p-6">
              <h2 className="text-2xl md:text-3xl font-bold text-white mb-6 flex items-center">
                <span className="w-3 h-3 bg-green-400 rounded-full mr-3"></span>
                {t('bachelor.contacts.faqTitle', '–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã')}
              </h2>
              
              <div className="space-y-4">
                {faqs.map((faq, index) => (
                  <div
                    key={index}
                    className="bg-white/5 border border-white/10 rounded-xl hover:border-green-400/30 transition-all duration-300 group"
                  >
                    <button
                      onClick={() => setOpenFaq(openFaq === index ? null : index)}
                      className="w-full p-4 text-left flex items-center justify-between hover:bg-white/5 transition-colors rounded-xl"
                    >
                      <span className="font-bold text-white pr-4 flex-1 text-lg group-hover:text-green-300 transition-colors">
                        {faq.question}
                      </span>
                      <div className={`w-8 h-8 bg-white/10 rounded-lg flex items-center justify-center transition-all duration-300 group-hover:bg-green-500/20 ${
                        openFaq === index ? 'bg-green-500/20 rotate-180' : ''
                      }`}>
                        <svg 
                          className={`w-5 h-5 text-white transition-transform duration-300 ${
                            openFaq === index ? 'rotate-180' : ''
                          }`}
                          fill="none" 
                          stroke="currentColor" 
                          viewBox="0 0 24 24"
                        >
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                        </svg>
                      </div>
                    </button>
                    {openFaq === index && (
                      <div className="px-4 pb-4 animate-fadeIn">
                        <div className="border-t border-white/10 pt-4">
                          <p className="text-blue-100 leading-relaxed text-lg">{faq.answer}</p>
                        </div>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ü–ª–∞–≤–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
      <div className="absolute bottom-20 left-5 w-6 h-6 bg-green-400/20 rounded-full animate-bounce hidden md:block"></div>
      <div className="absolute top-20 right-5 w-4 h-4 bg-blue-400/20 rounded-full animate-ping hidden md:block"></div>
    </section>
  );
};

export default BachelorContacts;