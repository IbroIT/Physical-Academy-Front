import { useState } from 'react';
import { useTranslation } from 'react-i18next';
import { motion, AnimatePresence } from 'framer-motion';
import { useNTSCommitteePage } from '../../../hooks/useApi';
import Loading from '../../common/Loading';

const NTSCommittee = () => {
  const { t } = useTranslation();
  const { data, loading, error } = useNTSCommitteePage();
  const [activeTab, setActiveTab] = useState('members');
  const [selectedMember, setSelectedMember] = useState(null);

  if (loading) {
    return <Loading />;
  }

  if (error) {
    return (
      <div className="flex justify-center items-center py-12">
        <div className="bg-red-100 border-l-4 border-red-500 text-red-700 p-4">
          <p>{t('common.errorLoading')}</p>
          <p className="text-sm">{error}</p>
        </div>
      </div>
    );
  }

  if (!data) {
    return (
      <div className="flex justify-center items-center py-12">
        <div className="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4">
          <p>{t('common.noData')}</p>
        </div>
      </div>
    );
  }

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.5
      }
    }
  };

  const tabVariants = {
    inactive: { 
      opacity: 0.7, 
      y: 0,
      background: 'rgba(255, 255, 255, 0.05)',
      borderColor: 'rgba(255, 255, 255, 0.1)'
    },
    active: { 
      opacity: 1, 
      y: -2,
      background: 'rgba(59, 130, 246, 0.2)',
      borderColor: 'rgba(59, 130, 246, 0.5)'
    }
  };

  const handleMemberClick = (member) => {
    setSelectedMember(selectedMember === member ? null : member);
  };
  



  return (
    <section className="relative min-h-screen bg-gradient-to-br from-slate-900 via-indigo-900 to-purple-900 py-16 lg:py-24 overflow-hidden">
      {/* Animated background */}
      <div className="absolute inset-0">
        <div className="absolute top-20 left-10 w-64 h-64 bg-indigo-500/10 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute top-1/3 right-20 w-48 h-48 bg-purple-500/15 rounded-full blur-3xl animate-bounce delay-1000"></div>
        <div className="absolute bottom-32 left-1/4 w-56 h-56 bg-blue-500/10 rounded-full blur-3xl animate-pulse delay-500"></div>
        
        {/* Scientific symbols */}
        <div className="absolute top-1/4 right-1/4 text-6xl opacity-5">üß™</div>
        <div className="absolute bottom-1/3 left-1/4 text-5xl opacity-5">‚öõÔ∏è</div>
        <div className="absolute top-1/2 left-1/2 text-4xl opacity-5">üî¨</div>
        <div className="absolute top-2/3 right-1/3 text-5xl opacity-5">üìö</div>
      </div>

      <div className="container mx-auto px-4 sm:px-6 relative z-10">
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate="visible"
          className="space-y-8"
        >
          {/* Header */}
          <motion.div variants={itemVariants} className="text-center">
            <div className="inline-flex flex-col items-center bg-white/5 backdrop-blur-sm rounded-2xl px-8 py-6 shadow-2xl border border-white/10">
              <motion.div
                className="w-16 h-16 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-xl flex items-center justify-center text-white shadow-lg mb-4"
                whileHover={{ rotate: 360 }}
                transition={{ duration: 0.8 }}
              >
                <span className="text-2xl">‚öõÔ∏è</span>
              </motion.div>
              <h2 className="text-3xl font-bold text-white mb-2">
                {data.title}
              </h2>
              <p className="text-indigo-200 max-w-2xl">
                {data.description}
              </p>
            </div>
          </motion.div>

          {/* Tabs */}
          <motion.div variants={itemVariants} className="flex justify-center space-x-4">
            <motion.button
              variants={tabVariants}
              animate={activeTab === 'members' ? 'active' : 'inactive'}
              whileHover={{ y: -2, opacity: 1 }}
              onClick={() => setActiveTab('members')}
              className="px-6 py-2 rounded-xl border transition-all duration-300 text-white font-medium"
            >
              {t('science.sections.nts.tabs.members')}
            </motion.button>
            <motion.button
              variants={tabVariants}
              animate={activeTab === 'directions' ? 'active' : 'inactive'}
              whileHover={{ y: -2, opacity: 1 }}
              onClick={() => setActiveTab('directions')}
              className="px-6 py-2 rounded-xl border transition-all duration-300 text-white font-medium"
            >
              {t('science.sections.nts.tabs.directions')}
            </motion.button>
          </motion.div>

          {/* Content based on active tab */}
          <AnimatePresence mode="wait">
          {/* –í–∫–ª–∞–¥–∫–∞ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∏—Ç–µ—Ç–∞ */}
          {activeTab === 'members' && (
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 md:gap-8">
              {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —á–ª–µ–Ω–∞–º */}
              <div className="space-y-4">
                {committeeMembers.map((member, index) => (
                  <button
                    key={member.id}
                    onClick={() => handleMemberClick(index)}
                    className={`w-full text-left p-4 md:p-6 rounded-2xl transition-all duration-300 group ${
                      index === activeMember
                        ? 'bg-gradient-to-r from-blue-500 to-green-500 shadow-lg transform scale-105'
                        : 'bg-white/10 hover:bg-white/20 hover:transform hover:scale-102'
                    }`}
                  >
                    <div className="flex items-center">
                      <div className="w-12 h-12 rounded-xl bg-white/20 flex items-center justify-center text-xl mr-4">
                        {member.icon}
                      </div>
                      <div className="flex-1 min-w-0">
                        <h3 className={`font-bold truncate ${
                          index === activeMember ? 'text-white' : 'text-white group-hover:text-green-300'
                        }`}>
                          {member.name}
                        </h3>
                        <p className={`text-sm truncate ${
                          index === activeMember ? 'text-blue-100' : 'text-blue-200'
                        }`}>
                          {member.position}
                        </p>
                      </div>
                      {index === activeMember && (
                        <div className="w-3 h-3 bg-green-300 rounded-full animate-ping ml-2"></div>
                      )}
                    </div>
                  </button>
                ))}
              </div>

              {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–ª–µ–Ω–µ */}
              <div className="bg-white/10 backdrop-blur-lg rounded-2xl md:rounded-3xl p-6 md:p-8 border border-white/20 shadow-2xl">
                <div className="flex flex-col sm:flex-row items-start mb-6">
                  <div className="w-24 h-24 rounded-2xl bg-gradient-to-r from-blue-400 to-green-400 p-1 mb-4 sm:mb-0 sm:mr-6">
                    <img
                      src={committeeMembers[activeMember].image}
                      alt={committeeMembers[activeMember].name}
                      className="w-full h-full rounded-2xl object-cover border-4 border-white"
                    />
                  </div>
                  <div className="flex-1">
                    <h2 className="text-2xl md:text-3xl font-bold text-white mb-2">
                      {committeeMembers[activeMember].name}
                    </h2>
                    <p className="text-green-300 font-semibold text-lg mb-1">
                      {committeeMembers[activeMember].position}
                    </p>
                    <p className="text-blue-200 mb-2">
                      {committeeMembers[activeMember].credentials}
                    </p>
                    <div className="bg-green-500/20 text-green-300 px-3 py-1 rounded-lg text-sm inline-block">
                      {committeeMembers[activeMember].specialization}
                    </div>
                  </div>
                </div>

                {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
                <div className="mb-6">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <span className="w-3 h-3 bg-green-400 rounded-full mr-3"></span>
                    {t('nts.achievements')}
                  </h3>
                  <div className="space-y-3">
                    {committeeMembers[activeMember].achievements.map((achievement, index) => (
                      <div
                        key={index}
                        className="flex items-start bg-white/5 rounded-xl p-4 border border-white/10 hover:border-green-400/30 transition-all duration-300 group"
                      >
                        <div className="w-6 h-6 bg-green-400/20 rounded-full flex items-center justify-center mr-3 mt-0.5 flex-shrink-0">
                          <span className="text-green-300 text-sm">‚úì</span>
                        </div>
                        <p className="text-blue-100 group-hover:text-white transition-colors">
                          {achievement}
                        </p>
                      </div>
                    ))}
                  </div>
                </div>

                {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="bg-white/5 rounded-2xl p-4 md:p-6 border border-white/10">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <span className="w-3 h-3 bg-blue-400 rounded-full mr-3"></span>
                    {t('nts.contact')}
                  </h3>
                  <div className="flex items-center group hover:transform hover:translate-x-2 transition-transform duration-300">
                    <div className="w-10 h-10 bg-blue-500/20 rounded-lg flex items-center justify-center mr-3 group-hover:bg-blue-500/30 transition-colors">
                      <span className="text-blue-300">üìß</span>
                    </div>
                    <div>
                      <p className="text-blue-200 text-sm">{t('nts.email')}</p>
                      <p className="text-white font-semibold">{committeeMembers[activeMember].email}</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –í–∫–ª–∞–¥–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –∫–æ–º–∏—Ç–µ—Ç–∞ */}
          {activeTab === 'functions' && (
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 md:gap-8">
              <div className="bg-white/10 backdrop-blur-lg rounded-2xl md:rounded-3xl p-6 md:p-8 border border-white/20 shadow-2xl">
                <h2 className="text-2xl md:text-3xl font-bold text-white mb-6 flex items-center">
                  <span className="w-4 h-4 bg-green-400 rounded-full mr-3"></span>
                  {t('nts.functionsTitle')}
                </h2>
                <div className="space-y-4">
                  {committeeFunctions.map((func, index) => (
                    <div
                      key={index}
                      className="flex items-start group hover:transform hover:translate-x-2 transition-all duration-300"
                    >
                      <div className="w-8 h-8 bg-gradient-to-r from-blue-400 to-green-400 rounded-full flex items-center justify-center text-white font-bold mr-4 mt-1 flex-shrink-0 group-hover:scale-110 transition-transform duration-300">
                        {index + 1}
                      </div>
                      <p className="text-blue-100 text-lg group-hover:text-white transition-colors pt-1">
                        {func}
                      </p>
                    </div>
                  ))}
                </div>
              </div>

              <div className="space-y-6">
                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 shadow-2xl">
                  <h3 className="text-xl font-bold text-white mb-6 text-center">
                    {t('nts.statsTitle')}
                  </h3>
                  <div className="grid grid-cols-2 gap-4">
                    <div className="text-center group hover:transform hover:scale-105 transition-transform duration-300">
                      <div className="w-16 h-16 bg-blue-500/20 rounded-2xl flex items-center justify-center mx-auto mb-2 group-hover:bg-blue-500/30 transition-colors">
                        <span className="text-2xl">üìà</span>
                      </div>
                      <div className="text-2xl font-bold text-white">15+</div>
                      <div className="text-blue-200 text-sm">{t('nts.stats.projects')}</div>
                    </div>
                    <div className="text-center group hover:transform hover:scale-105 transition-transform duration-300">
                      <div className="w-16 h-16 bg-green-500/20 rounded-2xl flex items-center justify-center mx-auto mb-2 group-hover:bg-green-500/30 transition-colors">
                        <span className="text-2xl">üë•</span>
                      </div>
                      <div className="text-2xl font-bold text-white">25+</div>
                      <div className="text-blue-200 text-sm">{t('nts.stats.experts')}</div>
                    </div>
                    <div className="text-center group hover:transform hover:scale-105 transition-transform duration-300">
                      <div className="w-16 h-16 bg-blue-500/20 rounded-2xl flex items-center justify-center mx-auto mb-2 group-hover:bg-blue-500/30 transition-colors">
                        <span className="text-2xl">üèÜ</span>
                      </div>
                      <div className="text-2xl font-bold text-white">8</div>
                      <div className="text-blue-200 text-sm">{t('nts.stats.patents')}</div>
                    </div>
                    <div className="text-center group hover:transform hover:scale-105 transition-transform duration-300">
                      <div className="w-16 h-16 bg-green-500/20 rounded-2xl flex items-center justify-center mx-auto mb-2 group-hover:bg-green-500/30 transition-colors">
                        <span className="text-2xl">üåç</span>
                      </div>
                      <div className="text-2xl font-bold text-white">12</div>
                      <div className="text-blue-200 text-sm">{t('nts.stats.countries')}</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –í–∫–ª–∞–¥–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
          {activeTab === 'projects' && (
            <div className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {currentProjects.map((project, index) => (
                  <div
                    key={index}
                    className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 shadow-2xl group hover:border-green-400/30 transition-all duration-300"
                  >
                    <div className="flex items-center mb-4">
                      <div className="w-12 h-12 bg-gradient-to-r from-blue-400 to-green-400 rounded-xl flex items-center justify-center text-xl text-white mr-4">
                        {project.icon}
                      </div>
                      <h3 className="text-xl font-bold text-white group-hover:text-green-300 transition-colors">
                        {project.title}
                      </h3>
                    </div>
                    
                    <p className="text-blue-100 mb-4">
                      {project.description}
                    </p>

                    {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
                    <div className="mb-3">
                      <div className="flex justify-between text-sm mb-2">
                        <span className="text-green-300">{project.status}</span>
                        <span className="text-blue-300">{project.progress}%</span>
                      </div>
                      <div className="w-full bg-white/20 rounded-full h-2">
                        <div
                          className="bg-gradient-to-r from-green-400 to-green-500 h-2 rounded-full transition-all duration-1000"
                          style={{ width: `${project.progress}%` }}
                        ></div>
                      </div>
                    </div>

                    <button className="w-full bg-white/10 hover:bg-white/20 text-white font-bold py-3 rounded-xl transition-all duration-300 border border-white/20 group-hover:border-green-400/30">
                      {t('nts.projectDetails')}
                    </button>
                  </div>
                ))}
              </div>

              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö */}
              <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 shadow-2xl">
                <h3 className="text-2xl font-bold text-white mb-4 text-center">
                  {t('nts.researchAreas')}
                </h3>
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                  {[1, 2, 3, 4].map((item) => (
                    <div
                      key={item}
                      className="bg-white/5 rounded-xl p-4 text-center group hover:bg-white/10 transition-all duration-300"
                    >
                      <div className="w-12 h-12 bg-blue-500/20 rounded-xl flex items-center justify-center mx-auto mb-2 group-hover:bg-blue-500/30 transition-colors">
                        <span className="text-xl">
                          {item === 1 && 'ü§ñ'}
                          {item === 2 && 'üíä'}
                          {item === 3 && 'üì±'}
                          {item === 4 && 'üîç'}
                        </span>
                      </div>
                      <h4 className="text-white font-semibold text-sm">
                        {t(`nts.researchAreasList.${item-1}`)}
                      </h4>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          )}
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
        <div className={`mt-12 md:mt-16 transition-all duration-1000 delay-500 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}>
          <div className="bg-gradient-to-r from-blue-600/20 to-green-600/20 backdrop-blur-lg rounded-2xl md:rounded-3xl p-6 md:p-8 border border-white/20 shadow-2xl">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 items-center">
              <div>
                <h3 className="text-2xl md:text-3xl font-bold text-white mb-4">
                  {t('nts.footer.title')}
                </h3>
                <p className="text-blue-100 text-lg mb-6">
                  {t('nts.footer.description')}
                </p>
              </div>
              <div className="text-center">
                <div className="w-32 h-32 bg-gradient-to-r from-blue-400 to-green-400 rounded-full flex items-center justify-center text-4xl mx-auto mb-4 animate-pulse">
                  üéØ
                </div>
                <p className="text-green-300 font-semibold text-lg">
                  {t('nts.footer.mission')}
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ü–ª–∞–≤–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
      {!isMobile && (
        <>
          <div className="absolute bottom-20 left-5 w-6 h-6 bg-green-400/20 rounded-full animate-bounce"></div>
          <div className="absolute top-20 right-5 w-4 h-4 bg-blue-400/20 rounded-full animate-ping"></div>
          <div className="absolute top-1/3 right-10 w-8 h-8 bg-white/10 rounded-full animate-pulse"></div>
        </>
      )}
    </section>
  );
};

export default NTSCommittee;